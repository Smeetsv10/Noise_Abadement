clear
close

%% Initialize parameters
cte = set_cte();
figures = true;

%% Calculations
% Reflective Type muffler
[IL,TL]= reflective_muffler(cte);

% Absorption type muffler

% Meta muffler


%% Post Processing
if figures
    
    % Reflective muffler
    figure(4),
    subplot(4,1,1), hold on
    plot(cte.f, abs(TL.helmholtz1)), xlabel("f"), ylabel("TR - Helmholtz resonator [dB]")
    plot(cte.f, abs(TL.helmholtz2)), xlabel("f"), ylabel("TR - Helmholtz resonator [dB]")
    subplot(4,1,2)
    plot(cte.f, abs(TL.lambda4)), xlabel("f"), ylabel("TR - lambda/4 [dB]")
    subplot(4,1,3)
    plot(cte.f, abs(TL.expansion)), xlabel("f"), ylabel("TR - expansion chamber [dB]")
    subplot(4,1,4), hold on
    plot(cte.f, abs(TL.helmholtz1)), xlabel("f"),
    plot(cte.f, abs(TL.helmholtz2)), xlabel("f"),
    plot(cte.f, abs(TL.expansion)), xlabel("f"),
    plot(cte.f, abs(TL.lambda4)), xlabel("f"), ylabel("TR [dB]")
    legend("Helmholtz resonator 1","Helmholtz resonator 2", "expansion chamber", "lambda/4 ")
        
    figure(5), hold on
    TL.total = TL.expansion + TL.helmholtz1 + TL.lambda4;
    plot(cte.f, abs(TL.total)), xlabel("f"), ylabel("total TR [dB]")
    
    figure(6),
    plot(cte.f, abs(TL.expansion_NX), cte.f, abs(TL.expansion))
    
    
end

%muffler_design(cte)

%save 'version1_2.mat'
